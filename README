Utilities to preprocess and plot SVG/GCode files.

Process
=======

* Create SVG, e.g. using Processing
* run `./optimize-svg.py input.svg -m 1` to optimize the pen path
* run `./svg2gcode.py input-optimized.svg` to make Gcode.
* run `caffeinate` if needed to prevent OS X machine from sleeping.

Upload the Gcode to CNCJS and plot.

Setup
=====

Set up and activate a venv, then:
```
brew install spatialindex
pip install -r requirements.txt
```

Files
=====

optimize-svg.py
---------------
Use greedy optimisation to reduce the travel path for the plotter.

e.g.:

```
./optimize-svg.py input.svg -m 1 -v opt-vis.svg
````

Adapted from penkit-optimize which is installed via pip.

TODO:
bring across width, height and transformations from the source SVG

svg2gcode.py
------------
Convert SVG to GCode. Scales and centres svg to plotter surface.

TODO:
some points still appear out of range. Why?


Adapted from https://github.com/davepwsmith/svg2gcode.git to suit plotter rather than
3D printer.

gcode_stream.py
---------------
(I prefer cnc.js now for visuals and pause controls)
Streams commands to the plotter
Instruct user to set initial position
Finish plot with return to 0 and pen up
Use in command line mode to send gcode file to plotter.